{"ast":null,"code":"import _regeneratorRuntime from \"/Users/user/Desktop/Actualize/reactToDo/client/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/Users/user/Desktop/Actualize/reactToDo/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/Users/user/Desktop/Actualize/reactToDo/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/user/Desktop/Actualize/reactToDo/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/user/Desktop/Actualize/reactToDo/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/user/Desktop/Actualize/reactToDo/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/user/Desktop/Actualize/reactToDo/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/user/Desktop/Actualize/reactToDo/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/user/Desktop/Actualize/reactToDo/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/user/Desktop/Actualize/reactToDo/client/src/App.js\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation($id: ID){\\n    removeTodo(id: $id)\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation($id: ID!, $complete: Boolean!){\\n    updateTodo(id: $id, complete: $complete)\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n{\\n  todos{\\n    text\\n    complete\\n    id\\n  }  \\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { graphql, compose } from 'react-apollo';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nvar TodosQuery = gql(_templateObject());\nvar UpdateMutation = gql(_templateObject2());\nvar RemoveMutation = gql(_templateObject3());\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.updateTodo =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(todo) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.props.updateTodo({\n                  variables: {\n                    id: todo.id,\n                    complete: !todo.complete\n                  },\n                  update: function update(store) {\n                    var data = store.readQuery({\n                      query: TodosQuery\n                    });\n                    data.todos = data.todos.map(function (x) {\n                      return x.id === todo.id ? _objectSpread({}, todo, {\n                        complete: !todo.complete\n                      }) : x;\n                    });\n                    store.writeQuery({\n                      query: TodosQuery,\n                      data: data\n                    });\n                  }\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.removeTodo = function (todo) {//remove todo\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props$data = this.props.data,\n          loading = _this$props$data.loading,\n          todos = _this$props$data.todos;\n\n      if (loading) {\n        return null;\n      }\n\n      return React.createElement(\"div\", {\n        style: {\n          display: 'flex'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          margin: 'auto',\n          width: 400\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        elevation: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, todos.map(function (todo) {\n        return React.createElement(ListItem, {\n          key: todo.id,\n          role: undefined,\n          dense: true,\n          button: true,\n          onClick: function onClick() {\n            return _this2.updateTodo(todo);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(Checkbox, {\n          checked: todo.complete,\n          tabIndex: -1,\n          disableRipple: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }), React.createElement(ListItemText, {\n          primary: todo.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }), React.createElement(ListItemSecondaryAction, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          onClick: function onClick() {\n            return _this2.removeTodo(todo);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, React.createElement(CloseIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }))));\n      })))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default compose(graphql(UpdateMutation, {\n  name: 'updateTodo'\n}), graphql(TodosQuery))(App);","map":{"version":3,"sources":["/Users/user/Desktop/Actualize/reactToDo/client/src/App.js"],"names":["React","Component","gql","graphql","compose","Paper","List","ListItem","ListItemSecondaryAction","ListItemText","Checkbox","IconButton","CloseIcon","TodosQuery","UpdateMutation","RemoveMutation","App","updateTodo","todo","props","variables","id","complete","update","store","data","readQuery","query","todos","map","x","writeQuery","removeTodo","loading","display","margin","width","undefined","text","name"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,cAAjC;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,uBAAP,MAAoC,2CAApC;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AAGA,IAAMC,UAAU,GAAGX,GAAH,mBAAhB;AAUA,IAAMY,cAAc,GAAGZ,GAAH,oBAApB;AAMA,IAAMa,cAAc,GAAGb,GAAH,oBAApB;;IAMMc,G;;;;;;;;;;;;;;;;;;UAEJC,U;;;;;+BAAa,iBAAMC,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACL,MAAKC,KAAL,CAAWF,UAAX,CAAsB;AAC1BG,kBAAAA,SAAS,EAAE;AACTC,oBAAAA,EAAE,EAAEH,IAAI,CAACG,EADA;AAETC,oBAAAA,QAAQ,EAAE,CAACJ,IAAI,CAACI;AAFP,mBADe;AAK1BC,kBAAAA,MAAM,EAAE,gBAAAC,KAAK,EAAI;AACf,wBAAMC,IAAI,GAAGD,KAAK,CAACE,SAAN,CAAgB;AAAEC,sBAAAA,KAAK,EAAEd;AAAT,qBAAhB,CAAb;AACAY,oBAAAA,IAAI,CAACG,KAAL,GAAaH,IAAI,CAACG,KAAL,CAAWC,GAAX,CACX,UAAAC,CAAC;AAAA,6BACCA,CAAC,CAACT,EAAF,KAASH,IAAI,CAACG,EAAd,qBAEKH,IAFL;AAGEI,wBAAAA,QAAQ,EAAE,CAACJ,IAAI,CAACI;AAHlB,2BAKEQ,CANH;AAAA,qBADU,CAAb;AASAN,oBAAAA,KAAK,CAACO,UAAN,CAAiB;AAAEJ,sBAAAA,KAAK,EAAEd,UAAT;AAAqBY,sBAAAA,IAAI,EAAJA;AAArB,qBAAjB;AACD;AAjByB,iBAAtB,CADK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;UAsBbO,U,GAAa,UAAAd,IAAI,EAAI,CACnB;AACD,K;;;;;;;6BAEQ;AAAA;;AAAA,6BAC0B,KAAKC,KAD/B,CACAM,IADA;AAAA,UACOQ,OADP,oBACOA,OADP;AAAA,UACgBL,KADhB,oBACgBA,KADhB;;AAEP,UAAIK,OAAJ,EAAY;AACV,eAAO,IAAP;AACD;;AACD,aACE;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAC;AAAV,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,KAAK,EAAG;AAAEC,UAAAA,MAAM,EAAC,MAAT;AAAiBC,UAAAA,KAAK,EAAE;AAAxB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAE,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEJ,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGR,KAAK,CAACC,GAAN,CAAU,UAAAX,IAAI;AAAA,eACb,oBAAC,QAAD;AACA,UAAA,GAAG,EAAEA,IAAI,CAACG,EADV;AAEA,UAAA,IAAI,EAAEgB,SAFN;AAGA,UAAA,KAAK,MAHL;AAIA,UAAA,MAAM,MAJN;AAKA,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACpB,UAAL,CAAgBC,IAAhB,CAAN;AAAA,WALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAME,oBAAC,QAAD;AACE,UAAA,OAAO,EAAEA,IAAI,CAACI,QADhB;AAEE,UAAA,QAAQ,EAAE,CAAC,CAFb;AAGE,UAAA,aAAa,MAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANF,EAWE,oBAAC,YAAD;AAAc,UAAA,OAAO,EAAEJ,IAAI,CAACoB,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAXF,EAYE,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,UAAD;AAAY,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACN,UAAL,CAAgBd,IAAhB,CAAN;AAAA,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF,CAZF,CADa;AAAA,OAAd,CADH,CAFI,CADF,CADF,CADF;AAgCD;;;;EAjEejB,S;;AAqElB,eAAeG,OAAO,CAACD,OAAO,CAACW,cAAD,EAAiB;AAACyB,EAAAA,IAAI,EAAE;AAAP,CAAjB,CAAR,EAAgDpC,OAAO,CAACU,UAAD,CAAvD,CAAP,CAA4EG,GAA5E,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { graphql, compose } from 'react-apollo';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\n\nconst TodosQuery = gql`\n{\n  todos{\n    text\n    complete\n    id\n  }  \n}\n`;\n\nconst UpdateMutation = gql`\n  mutation($id: ID!, $complete: Boolean!){\n    updateTodo(id: $id, complete: $complete)\n  }\n`;\n\nconst RemoveMutation = gql`\n  mutation($id: ID){\n    removeTodo(id: $id)\n  }\n`;\n\nclass App extends Component {\n\n  updateTodo = async todo => {\n    await this.props.updateTodo({\n      variables: {\n        id: todo.id,\n        complete: !todo.complete\n      },\n      update: store => {\n        const data = store.readQuery({ query: TodosQuery });\n        data.todos = data.todos.map(\n          x => \n            x.id === todo.id\n            ? {\n              ...todo,\n              complete: !todo.complete\n            }\n            : x\n        );\n        store.writeQuery({ query: TodosQuery, data });\n      }\n    });\n  };\n\n  removeTodo = todo => {\n    //remove todo\n  };\n\n  render() {\n    const {data: {loading, todos}} = this.props;\n    if (loading){\n      return null;\n    }\n    return (\n      <div style={{ display:'flex' }}>\n        <div style= {{ margin:'auto', width: 400 }}>\n          <Paper elevation={1}>\n\n      <List>\n        {todos.map(todo => (\n          <ListItem \n          key={todo.id} \n          role={undefined} \n          dense \n          button \n          onClick={() => this.updateTodo(todo)}>\n            <Checkbox\n              checked={todo.complete}\n              tabIndex={-1}\n              disableRipple\n            />\n            <ListItemText primary={todo.text} />\n            <ListItemSecondaryAction>\n              <IconButton onClick={() => this.removeTodo(todo)}>\n                <CloseIcon />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        ))}\n      </List>\n\n          </Paper>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default compose(graphql(UpdateMutation, {name: 'updateTodo'}), graphql(TodosQuery))(App);\n"]},"metadata":{},"sourceType":"module"}