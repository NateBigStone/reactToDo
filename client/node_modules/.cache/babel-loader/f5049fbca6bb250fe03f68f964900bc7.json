{"ast":null,"code":"import _toConsumableArray from \"/Users/user/Desktop/Actualize/reactToDo/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/user/Desktop/Actualize/reactToDo/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/user/Desktop/Actualize/reactToDo/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/user/Desktop/Actualize/reactToDo/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/user/Desktop/Actualize/reactToDo/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/user/Desktop/Actualize/reactToDo/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/user/Desktop/Actualize/reactToDo/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/user/Desktop/Actualize/reactToDo/client/src/App.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n{\\n  todos{\\n    text\\n    complete\\n    id\\n  }  \\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { graphql } from 'react-apollo';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport CommentIcon from '@material-ui/icons/Comment';\nvar TodosQuery = gql(_templateObject());\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleToggle = function (value) {\n      return function () {\n        var checked = _this.state.checked;\n        var currentIndex = checked.indexOf(value);\n\n        var newChecked = _toConsumableArray(checked);\n\n        if (currentIndex === -1) {\n          newChecked.push(value);\n        } else {\n          newChecked.splice(currentIndex, 1);\n        }\n\n        _this.setState({\n          checked: newChecked\n        });\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.props);\n      var _this$props$data = this.props.data,\n          loading = _this$props$data.loading,\n          todos = _this$props$data.todos;\n\n      if (loading) {\n        return null;\n      }\n\n      return React.createElement(\"div\", {\n        style: {\n          display: 'flex'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          margin: 'auto',\n          width: 400\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        elevation: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, todos.map(function (todo) {\n        return React.createElement(ListItem, {\n          key: todo.id,\n          role: undefined,\n          dense: true,\n          button: true,\n          onClick: _this2.handleToggle(todo),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(Checkbox, {\n          checked: todo.complete,\n          tabIndex: -1,\n          disableRipple: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }), React.createElement(ListItemText, {\n          primary: todo.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }), React.createElement(ListItemSecondaryAction, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          \"aria-label\": \"Comments\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(CommentIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }))));\n      })))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default graphql(TodosQuery)(App);","map":{"version":3,"sources":["/Users/user/Desktop/Actualize/reactToDo/client/src/App.js"],"names":["React","Component","gql","graphql","Paper","List","ListItem","ListItemSecondaryAction","ListItemText","Checkbox","IconButton","CommentIcon","TodosQuery","App","handleToggle","value","checked","state","currentIndex","indexOf","newChecked","push","splice","setState","console","log","props","data","loading","todos","display","margin","width","map","todo","id","undefined","complete","text"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { graphql } from 'react-apollo';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport CommentIcon from '@material-ui/icons/Comment';\n\n\nconst TodosQuery = gql`\n{\n  todos{\n    text\n    complete\n    id\n  }  \n}\n`;\n\nclass App extends Component {\n\n  handleToggle = value => () => {\n    const { checked } = this.state;\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    this.setState({\n      checked: newChecked,\n    });\n  };\n  render() {\n    console.log(this.props);\n    const {data: {loading, todos}} = this.props;\n    if (loading){\n      return null;\n    }\n    return (\n      <div style={{ display:'flex' }}>\n        <div style= {{ margin:'auto', width: 400 }}>\n          <Paper elevation={1}>\n\n      <List>\n        {todos.map(todo => (\n          <ListItem \n          key={todo.id} \n          role={undefined} \n          dense \n          button \n          onClick={this.handleToggle(todo)}>\n            <Checkbox\n              checked={todo.complete}\n              tabIndex={-1}\n              disableRipple\n            />\n            <ListItemText primary={todo.text} />\n            <ListItemSecondaryAction>\n              <IconButton aria-label=\"Comments\">\n                <CommentIcon />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        ))}\n      </List>\n\n          </Paper>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default graphql(TodosQuery)(App);\n"]},"metadata":{},"sourceType":"module"}